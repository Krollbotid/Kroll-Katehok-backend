version: '3.9'

networks:
  nginx-public:

services:
  db:
    container_name: postgres
    image: postgres:15.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${SQL_USER:-postgres}
      - POSTGRES_PASSWORD=${SQL_PASSWORD:-postgres}
      - POSTGRES_DB=${SQL_DATABASE:-goods_catalog}
    env_file:
      - ./.env.dev
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "${SQL_USER:-postgres}", "-d", "${SQL_DATABASE:-goods_catalog}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s


  django:
    build: ./django
    container_name: django
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./django/:/usr/src/project/
    depends_on:
      - db
    env_file:
      - ./.env.dev
    ports:
      - 8000:8000

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      - django
    restart: unless-stopped
      #- auth_service
      #- notification_service
    secrets:
      - nginx_ssl_key
      - nginx_ssl_crt

volumes:
  postgres_data:

secrets:
  nginx_ssl_key:
    file: /etc/ssl/private/nginx.key
  nginx_ssl_crt:
    file: /etc/ssl/private/nginx.crt