version: '3.9'

services:
  db:
    container_name: postgres
    image: postgres:15.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${SQL_USER:-postgres}
      - POSTGRES_PASSWORD=${SQL_PASSWORD:-postgres}
      - POSTGRES_DB=${SQL_DATABASE:-goods_catalog}
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-U", "${SQL_USER:-postgres}", "-d", "${SQL_DATABASE:-goods_catalog}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app_network


  django:
    build: ./django
    container_name: django
    command: >
      sh -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py shell -c 'from start.create_superuser import create_superuser; create_superuser()' &&
      python manage.py shell -c 'from start.filler import filler; filler()' &&
      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./django/:/usr/src/project/
    depends_on:
      - db
      - redis
    environment:
      DEBUG: "${DEBUG:-1}"
      SECRET_KEY: "${SECRET_KEY:-burninhell}"
      DJANGO_ALLOWED_HOSTS: "${DJANGO_ALLOWED_HOSTS:-localhost}"
      SQL_ENGINE: "${SQL_ENGINE:-django.db.backends.postgresql}"
      SQL_DATABASE: "${SQL_DATABASE:-goods_catalog}"
      SQL_USER: "${SQL_USER:-postgres}"
      SQL_PASSWORD: "${SQL_PASSWORD:-postgres}"
      SQL_HOST: "${SQL_HOST:-db}"
      SQL_PORT: "${SQL_PORT:-5432}"
      DJANGO_SUPERUSER_USERNAME: "${DJANGO_SUPERUSER_USERNAME:-root}"
      DJANGO_SUPERUSER_EMAIL: "${DJANGO_SUPERUSER_EMAIL:-admin@example.com}"
      DJANGO_SUPERUSER_PASSWORD: "${DJANGO_SUPERUSER_PASSWORD:-root}"
    ports:
      - 8000:8000
    networks:
      - app_network
    secrets:
      - django_super_password

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:8080"
      - "8443:8443"
    networks:
      - app_network
    depends_on:
      - django
    restart: unless-stopped
      #- auth_service
      #- notification_service
    secrets:
      - nginx_ssl_key
      - nginx_ssl_crt

  notification_service:
    container_name: notification_service
    build: ./notif
    environment:
      SMTP_SERVER: "${SMTP_SERVER:-smtp.gmail.com}"
      SMTP_PORT: "${SMTP_PORT:-587}"
      SMTP_USERNAME: "${SMTP_USERNAME:-myemail@example.com}"
    secrets:
      - smtp_password
    volumes:
      - app_data:/app/data
    networks:
      - app_network

networks:
  app_network:

volumes:
  postgres_data:
  app_data:

secrets:
  nginx_ssl_key:
    file: /etc/ssl/private/nginx.key
  nginx_ssl_crt:
    file: /etc/ssl/private/nginx.crt
  smtp_password:
    file: ./secrets/smtp_password.txt
  django_super_password:
    file: ./secrets/django_super_password.txt
